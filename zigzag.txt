/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        vector<vector<int>> zigzag;
        
        if (root == NULL)
        {
            return zigzag;
        }
        
        deque<struct TreeNode*> q;
        q.push_back(root);
        
        int currlevel = 0;
        
        while (!q.empty())
        {
            int levelnodes = q.size();
            
            vector<int> level;
            
            while (levelnodes > 0)
            {
                struct TreeNode *node = q.front();
                q.pop_front();
                
                if (currlevel % 2 == 0)
                {
                    level.push_back(node->val);
                   
                }
                else
                {
                    level.insert(level.begin(),node->val);
                }
                
                if (node->left != NULL)
                {
                    q.push_back(node->left);
                }
                if (node->right != NULL)
                {
                    q.push_back(node->right);
                }
                
                levelnodes--;                
            }
            
            zigzag.push_back(level);
            
            currlevel++;
        }
        return zigzag;
    }
};
