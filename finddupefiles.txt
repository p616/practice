#include <iostream>
using namespace std;

/*
md5(filename, chunk_size)
-> open, buffer in, hash
-> returns string 
*/


void FindDupes(string path, map<int, list>&map)
{  
  
  list subs = subpath(path);
  for (string entry : subs)
  {
    if (isDir(entry))
    {
      string fullpath = path + "/" + entry;
      FindDupes(entry, map);
    }
    else
    {
      string hash = md5(entry);
      string fullpath = path + "/" + entry;
      list l;
      if (auto it = map.find(hash) != map.end())
      {
        //
        l = it->second;  
        l.push_back(fullpath);       
      } 
      else
      {
        l.push_back(fullpath);       
        map.insert({hash, l});
      }
        
    }                  
  
  }


main()
{
  vector<vector<string>> ret;

  for (auto key= map.keys.begin(); key=map.keys.end(); key++)
	{	
	vector<string> v;
	if (v.size() > 1)
	{
		ret.push_back(v);
	}
} 
}
