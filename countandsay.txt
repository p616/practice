The count-and-say sequence is the sequence of integers beginning as follows:

1, 11, 21, 1211, 111221, ...

1 is read off as one 1 or 11.
11 is read off as two 1s or 21.

21 is read off as one 2, then one 1 or 1211.

Given an integer n, generate the nth sequence.

if n = 2, the sequence is 11.



string countAndSay(int A) 
{
    // first string is "1"
    string ans = "1";

    // generate each next string from previous one, starting with 2nd from 1st
    for (int j=1; j<A; ++j)
    {
        string curr = "";        
        
        // the current char and its count
        char c = ans[0];
        int count = 1;
        
        for (int i=1; i<ans.length(); ++i)
        {
            if (ans[i] == c)
            {
                // increment count for matchng char
                count++;
            }
            else
            {
                // found a new char
                // write current count + char to current string
                curr += to_string(count);
                curr += c;
                
                // reset current char and its count
                c = ans[i];
                count = 1;
            }
        }
        
        // update current string with last char and its count
        curr += to_string(count);
        curr += c;
        
        // write current string to answer string 
        // for generating next, or done (return)
        ans = curr;
    }
    
    return ans;
}
